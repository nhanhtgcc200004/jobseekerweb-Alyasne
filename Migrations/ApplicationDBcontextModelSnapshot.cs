// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalyearproject.Models;

#nullable disable

namespace finalyearproject.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    partial class ApplicationDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("finalyearproject.Models.Appliedjob", b =>
                {
                    b.Property<int>("appliedjob_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("post_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("appliedjob_id");

                    b.HasIndex("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("Appliedjobs");
                });

            modelBuilder.Entity("finalyearproject.Models.CV", b =>
                {
                    b.Property<int>("cv_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cv_file")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_upload")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("cv_id");

                    b.HasIndex("user_id");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("finalyearproject.Models.Comment", b =>
                {
                    b.Property<int>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment_content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_comment")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("post_id")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("comment_id");

                    b.HasIndex("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("finalyearproject.Models.Company", b =>
                {
                    b.Property<int>("conpany_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email_conpany")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("conpany_id");

                    b.ToTable("Companys");

                    b.HasData(
                        new
                        {
                            conpany_id = 999,
                            Address = "c",
                            Email_conpany = "b",
                            company_name = "a",
                            status = "open"
                        });
                });

            modelBuilder.Entity("finalyearproject.Models.Post", b =>
                {
                    b.Property<int>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_post")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("experience")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("expired_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("job_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("limit_candidates")
                        .HasColumnType("int");

                    b.Property<string>("other_condition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("post_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("salary")
                        .HasColumnType("int");

                    b.Property<string>("skill_required")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("total_of_candidates")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("finalyearproject.Models.Report", b =>
                {
                    b.Property<int>("report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("content_report")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_submit")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("post_id")
                        .HasColumnType("int");

                    b.Property<int>("reciver_id")
                        .HasColumnType("int");

                    b.Property<int>("reporter_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("report_id");

                    b.HasIndex("post_id");

                    b.HasIndex("reciver_id");

                    b.HasIndex("reporter_id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("finalyearproject.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_id");

                    b.HasIndex("company_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            user_id = 1,
                            Birthday = "13/05/2002",
                            Email = "abc@gmail.com",
                            Gender = "Male",
                            Name = "nhan",
                            Password = "123456",
                            Phone = "07777",
                            Status = "Ok",
                            avatar = "a",
                            company_id = 999,
                            role = "user"
                        });
                });

            modelBuilder.Entity("finalyearproject.Models.Verification", b =>
                {
                    b.Property<string>("verify_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("verify_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("verify_id");

                    b.HasIndex("user_id");

                    b.ToTable("Verifications");
                });

            modelBuilder.Entity("finalyearproject.Models.Appliedjob", b =>
                {
                    b.HasOne("finalyearproject.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.CV", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Comment", b =>
                {
                    b.HasOne("finalyearproject.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Post", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Report", b =>
                {
                    b.HasOne("finalyearproject.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "reciver")
                        .WithMany()
                        .HasForeignKey("reciver_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "repoter")
                        .WithMany()
                        .HasForeignKey("reporter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("reciver");

                    b.Navigation("repoter");
                });

            modelBuilder.Entity("finalyearproject.Models.User", b =>
                {
                    b.HasOne("finalyearproject.Models.Company", "company")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("finalyearproject.Models.Verification", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
