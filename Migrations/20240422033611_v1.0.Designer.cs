// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalyearproject.Models;

#nullable disable

namespace finalyearproject.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    [Migration("20240422033611_v1.0")]
    partial class v10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("finalyearproject.Models.CV", b =>
                {
                    b.Property<int>("cv_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cv_file")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_upload")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("cv_id");

                    b.HasIndex("user_id");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("finalyearproject.Models.Comment", b =>
                {
                    b.Property<int>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment_content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_comment")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("post_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("comment_id");

                    b.HasIndex("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("finalyearproject.Models.Company", b =>
                {
                    b.Property<int>("company_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email_company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("company_id");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("finalyearproject.Models.Post", b =>
                {
                    b.Property<int>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("date_post")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("location_work")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("post_body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("post_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("finalyearproject.Models.Reply_Comment", b =>
                {
                    b.Property<int>("reply_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("comment_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_reply")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("reply_content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("reply_id");

                    b.HasIndex("comment_id");

                    b.HasIndex("user_id");

                    b.ToTable("Replys");
                });

            modelBuilder.Entity("finalyearproject.Models.Report", b =>
                {
                    b.Property<int>("report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("content_report")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_submit")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("post_id")
                        .HasColumnType("int");

                    b.Property<int>("reciver_id")
                        .HasColumnType("int");

                    b.Property<int>("reporter_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("report_id");

                    b.HasIndex("post_id");

                    b.HasIndex("reciver_id");

                    b.HasIndex("reporter_id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("finalyearproject.Models.Review", b =>
                {
                    b.Property<int>("review_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("review_content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("reviewer_id")
                        .HasColumnType("int");

                    b.Property<int>("stars")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("review_id");

                    b.HasIndex("reviewer_id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("finalyearproject.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Viewable")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("finalyearproject.Models.Verification", b =>
                {
                    b.Property<string>("verify_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("verify_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("verify_id");

                    b.HasIndex("user_id");

                    b.ToTable("Verifications");
                });

            modelBuilder.Entity("finalyearproject.Models.CV", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Comment", b =>
                {
                    b.HasOne("finalyearproject.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Post", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Reply_Comment", b =>
                {
                    b.HasOne("finalyearproject.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("comment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("user");
                });

            modelBuilder.Entity("finalyearproject.Models.Report", b =>
                {
                    b.HasOne("finalyearproject.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "reciver")
                        .WithMany()
                        .HasForeignKey("reciver_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finalyearproject.Models.User", "repoter")
                        .WithMany()
                        .HasForeignKey("reporter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("reciver");

                    b.Navigation("repoter");
                });

            modelBuilder.Entity("finalyearproject.Models.Review", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("reviewer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("finalyearproject.Models.Verification", b =>
                {
                    b.HasOne("finalyearproject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
